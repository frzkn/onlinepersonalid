{"ast":null,"code":"import _slicedToArray from \"/home/frzkn/hackathon/frontend/react/online-personal-id/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/frzkn/hackathon/frontend/react/online-personal-id/src/components/Photo.js\";\nimport React from 'react';\n\nfunction Photo() {\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        states = _React$useState2[0],\n        setStates = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        loader = _React$useState4[0],\n        setLoader = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        show = _React$useState6[0],\n        toggleShow = _React$useState6[1];\n\n  return React.createElement(\"section\", {\n    class: \"browser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Reverse Searching Google Images\"), React.createElement(\"div\", {\n    class: \"browser-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    class: \"upper-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Google Crawler to find domain links of uploaded Images.\"), React.createElement(\"div\", {\n    class: \"file-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    class: \"image\",\n    type: \"file\",\n    name: \"image\",\n    accept: \"image/*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      if (loader) {\n        setLoader(false);\n      }\n\n      let data = new FormData();\n      let a = document.querySelector('.image').files[0];\n      data.append('image', a);\n      fetch('//localhost:3001/google', {\n        method: 'POST',\n        body: data\n      }).then((data, err) => data.text()).then(data => {\n        console.log(data);\n        let ar = data.split(',');\n        setStates(ar);\n        toggleShow(true);\n        setLoader(false);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Upload\"))), React.createElement(\"div\", {\n    class: \"google-search-results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, show && React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    class: \"table-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Domain\"), React.createElement(\"p\", {\n    className: \"table-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Results\")), loader && React.createElement(\"span\", {\n    className: \"loader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), show && states && states.map(i => {\n    return [React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, i), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"GOOD\")];\n  }), states.length > 1 && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"No Bad domain found\")));\n}\n\nexport default Photo;","map":{"version":3,"sources":["/home/frzkn/hackathon/frontend/react/online-personal-id/src/components/Photo.js"],"names":["React","Photo","useState","states","setStates","loader","setLoader","show","toggleShow","data","FormData","a","document","querySelector","files","append","fetch","method","body","then","err","text","console","log","ar","split","map","i","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAmB,OAAnB;;AAEA,SAASC,KAAT,GAAiB;AAAA,0BACaD,KAAK,CAACE,QAAN,CAAe,EAAf,CADb;AAAA;AAAA,QACRC,MADQ;AAAA,QACAC,SADA;;AAAA,2BAEaJ,KAAK,CAACE,QAAN,CAAe,KAAf,CAFb;AAAA;AAAA,QAERG,MAFQ;AAAA,QAEAC,SAFA;;AAAA,2BAGYN,KAAK,CAACE,QAAN,CAAe,KAAf,CAHZ;AAAA;AAAA,QAGRK,IAHQ;AAAA,QAGFC,UAHE;;AAKf,SACE;AAAS,IAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AAAK,IAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DADF,EAIE;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAC,OAAb;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,IAAI,EAAC,OAAtC;AAA8C,IAAA,MAAM,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAGH,MAAH,EAAW;AAEXC,QAAAA,SAAS,CAAC,KAAD,CAAT;AACC;;AACD,UAAIG,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACA,UAAIC,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,KAAjC,CAAuC,CAAvC,CAAR;AACAL,MAAAA,IAAI,CAACM,MAAL,CAAY,OAAZ,EAAqBJ,CAArB;AAEAK,MAAAA,KAAK,CAAC,yBAAD,EAA4B;AAC/BC,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,IAAI,EAAET;AAFyB,OAA5B,CAAL,CAIGU,IAJH,CAIQ,CAACV,IAAD,EAAOW,GAAP,KAAeX,IAAI,CAACY,IAAL,EAJvB,EAKGF,IALH,CAKSV,IAAD,IAAU;AACda,QAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,YAAIe,EAAE,GAAGf,IAAI,CAACgB,KAAL,CAAW,GAAX,CAAT;AACArB,QAAAA,SAAS,CAACoB,EAAD,CAAT;AACAhB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAXH;AAYD,KAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAJF,CAFF,EAoCE;AAAK,IAAA,KAAK,EAAC,uBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,IACH,0CACE;AAAG,IAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAFJ,EAQGF,MAAM,IAAI;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARb,EASGE,IAAI,IACHJ,MADD,IAECA,MAAM,CAACuB,GAAP,CAAYC,CAAD,IAAO;AAChB,WAAO,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,CAAJ,CAAD,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb,CAAP;AACD,GAFD,CAXJ,EAcGxB,MAAM,CAACyB,MAAP,GAAgB,CAAhB,IAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAdxB,CApCF,CADF;AAuDD;;AAED,eAAe3B,KAAf","sourcesContent":["import React  from 'react'\n\nfunction Photo() {\n  const [states, setStates] = React.useState('')\n  const [loader, setLoader] = React.useState(false)\n  const [show, toggleShow] = React.useState(false)\n\n  return (\n    <section class=\"browser\">\n      <h1>Reverse Searching Google Images</h1>\n      <div class=\"browser-content\">\n        <p class=\"upper-light\">\n          Google Crawler to find domain links of uploaded Images.\n        </p>\n        <div class=\"file-row\">\n          <input class=\"image\" type=\"file\" name=\"image\" accept=\"image/*\" />\n          <button\n            onClick={() => {\n              if(loader) {\n\n              setLoader(false)\n              }\n              let data = new FormData()\n              let a = document.querySelector('.image').files[0]\n              data.append('image', a)\n\n              fetch('//localhost:3001/google', {\n                method: 'POST',\n                body: data\n              })\n                .then((data, err) => data.text())\n                .then((data) => {\n                  console.log(data)\n                  let ar = data.split(',')\n                  setStates(ar)\n                  toggleShow(true)\n                  setLoader(false)\n                })\n            }}\n          >\n            Upload\n          </button>\n        </div>\n      </div>\n      <div class=\"google-search-results\">\n        {show && (\n          <>\n            <p class=\"table-title\">Domain</p>\n            <p className=\"table-title\">Results</p>\n          </>\n        )}\n\n        {loader && <span className=\"loader\"></span>}\n        {show &&\n          states &&\n          states.map((i) => {\n            return [<p>{i}</p>, <p>GOOD</p>]\n          })}\n        {states.length > 1 && <p>No Bad domain found</p>}\n      </div>\n    </section>\n  )\n}\n\nexport default Photo\n"]},"metadata":{},"sourceType":"module"}