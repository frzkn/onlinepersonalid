{"ast":null,"code":"import _slicedToArray from \"/home/frzkn/hackathon/frontend/react/online-personal-id/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/frzkn/hackathon/frontend/react/online-personal-id/frontend/src/components/Profile.js\";\nimport React from 'react';\nimport './Profile.css';\nimport search from \"../images/search.svg\";\nimport axios from 'axios';\nimport { useState } from 'react';\nexport default function Profile() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputBox = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        info = _useState4[0],\n        setInfo = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        show = _useState6[0],\n        toggleShow = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loader = _useState8[0],\n        setLoader = _useState8[1];\n\n  const getProfile = () => {\n    if (inputBox.length > 4) {\n      if (setLoader) {\n        setLoader(true);\n        toggleShow(false);\n      }\n\n      if (!inputBox) return console.log('missing input');\n      console.log('breakpoint');\n      axios.get(`//localhost:3001/linkedin?uname=${inputBox}`).then(function (response) {\n        console.log(response);\n        setInfo(response);\n        toggleShow(true);\n        setLoader(false);\n      });\n    } else {\n      alert('Enter a valid username');\n    }\n  };\n\n  return React.createElement(\"section\", {\n    class: \"browser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"What info your Internet Profiles have on you? \"), React.createElement(\"div\", {\n    class: \"search-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: inputBox,\n    class: \"profile-search\",\n    placeholder: \"Enter username, try frzkn\",\n    disabled: loader,\n    onChange: e => setInput(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    class: \"search-icon\",\n    onClick: () => getProfile(),\n    disabled: loader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: search,\n    alt: \"search-ico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), loader && React.createElement(\"span\", {\n    className: \"loader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), show && React.createElement(\"div\", {\n    class: \"profile-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    class: \"upper-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"PERSONAL INFORMATION\"), React.createElement(\"img\", {\n    class: \"prof-picture\",\n    src: info.data.imageurl,\n    alt: \"dp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, info.data.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, info.data.location), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, info.data.headline)));\n}","map":{"version":3,"sources":["/home/frzkn/hackathon/frontend/react/online-personal-id/frontend/src/components/Profile.js"],"names":["React","axios","useState","Profile","inputBox","setInput","info","setInfo","show","toggleShow","loader","setLoader","getProfile","length","console","log","get","then","response","alert","e","target","value","search","data","imageurl","name","location","headline"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Profile.css'\nimport search from '../images/search.svg'\nimport axios from 'axios'\nimport { useState } from 'react'\n\nexport default function Profile() {\n  const [inputBox, setInput] = useState('')\n  const [info, setInfo] = useState('')\n  const [show, toggleShow] = useState(false)\n  const [loader, setLoader] = useState(false)\n\n  const getProfile = () => {\n    if (inputBox.length > 4) {\n      if (setLoader) {\n        setLoader(true)\n        toggleShow(false)\n      }\n      if (!inputBox) return console.log('missing input')\n      console.log('breakpoint')\n      axios\n        .get(\n          `//localhost:3001/linkedin?uname=${inputBox}`\n        )\n        .then(function(response) {\n          console.log(response)\n          setInfo(response)\n          toggleShow(true)\n          setLoader(false)\n        })\n    } else {\n      alert('Enter a valid username')\n    }\n  }\n\n  return (\n    <section class=\"browser\">\n      <h1>What info your Internet Profiles have on you? </h1>\n      <div class=\"search-row\">\n        <input\n          type=\"text\"\n          value={inputBox}\n          class=\"profile-search\"\n          placeholder=\"Enter username, try frzkn\"\n          disabled={loader}\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <button\n          class=\"search-icon\"\n          onClick={() => getProfile()}\n          disabled={loader}\n        >\n          <img src={search} alt=\"search-ico\" />\n        </button>\n      </div>\n      {loader && <span className=\"loader\"></span>}\n\n      {show && (\n        <div class=\"profile-content\">\n          <p class=\"upper-light\">PERSONAL INFORMATION</p>\n          <img class=\"prof-picture\" src={info.data.imageurl} alt=\"dp\" />\n          <h3>{info.data.name}</h3>\n          <p>{info.data.location}</p>\n          <p>{info.data.headline}</p>\n        </div>\n      )}\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}